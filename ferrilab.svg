<svg viewBox="-104 -104 208 208" xmlns="http://www.w3.org/2000/svg">
  <g id="logo-square" class="textual">
    <def>
      <style type="text/css">
        @import url('https://fonts.googleapis.com/css2?family=Roboto+Slab');
      </style>
      <g id="chainring-base">
        <path class="fg-trace fg-solid" d="
          M 0 -80
          A 80 80 0 0 1 0 80
          A 80 80 0 0 1 0 -80
          V -95
          A 95 95 0 0 1 0 95
          A 95 95 0 0 1 0 -95
          Z
          " />
        <path class="bg-trace bg-solid" d="
          M 0 -95
          A 95 95 0 0 1 0 95
          A 95 95 0 0 1 0 -95
          V -104
          A 104 104 0 0 1 0 104
          A 104 104 0 0 1 0 -104
          Z
          " />
      </g>
      <g id="outer-tooth">
        <path stroke-width="1" class="fg-trace fg-solid" style="transform: rotate(7.5deg);" d="
          M -4 -100 a 1 1 0 0 1 8 0
          l 2 10 h -12 l 2 -10
          M 100 -4 a 1 1 0 0 1 0 8
          l -10 2 v -12 l 10 2
          M 4 100 a 1 1 0 0 1 -8 0
          l -2 -10 h 12 l -2 10
          M -100 4 a 1 1 0 0 1 0 -8
          l 10 -2 v 12 l -10 -2
          " />
      </g>
      <g id="outer-tooth-negative">
        <path stroke-width="1" class="bg-trace bg-solid" style="transform: rotate(0deg);" d="
          M -8 -98 a 8 8 0 0 0 16 0 Z
          M 98 -8 a 8 8 0 0 0 0 16 Z
          M 8 98 a 8 8 0 0 0 -16 0 Z
          M -98 8 a 8 8 0 0 0 0 -16 Z
          " />
      </g>
      <g id="inner-tooth">
        <path class="fg-trace fg-solid" stroke-width="8" d="
          M -12 -84 H 12 L 0 -72 Z
          " />
        <circle class="bg-solid" cy="-80" r="5.5" />
      </g>
      <g id="transformer">
        <path class="accent2-trace" stroke-width="8" d="
          M 0 32 V 72
          M -60 41
          a 15 10 0 0 1 40 0
          a 15 10 0 0 1 40 0
          a 15 10 0 0 1 40 0
        " />
        <path class="sepbar accent1-trace" d="
          M -66 14
          H 66
          " />
      </g>
      <g id="prism">
        <mask id="space-inner">
          <circle cx="0" cy="0" r="103" fill="black" />
          <circle cx="0" cy="0" r="85" fill="white" />
        </mask>
        <clipPath id="prism-clip">
          <path d="M 0 50 l -43.3 -75 86.6 0 Z" />
        </clipPath>
        <path id="rainbow-path" class="accent-trace" d="
          M 0 28
          L 81.5 -25
          a 85 85 0 0 1 1 46
          V 38
          z
          " />
        <clipPath id="rainbow-clip">
          <use href="#rainbow-path" />
        </clipPath>
      </g>
    </def>

    <g id="logo-main">
      <!-- Fills the working area -->
      <circle r="80" class="bg-trace bg-solid" />

      <g id="diagram">
        <use href="#transformer" />
        <text class="acronym fg-solid" x="-64" y="4">FRB</text>
      </g>

      <!-- I thought about using a refracting prism as the logo, but it didn't
      turn out well. I'm not deleting it only because embedding HTML gradients
      is really hard and I don't want to throw away that effort. -->
      <g id="prismatic">
        <path id="light-in" mask="url('#space-inner')" class="accent-trace accent-solid" stroke-width="16"
          style="transform: rotate(-120deg);" d="
            M -20 -22.5 L 42.5 -73.6
          " />
        <foreignObject id="rainbow-embed" x="0" y="-25" width="85" height="61">
          <div id="rainbow-html" xmlns="http://www.w3.org/1999/xhtml"></div>
        </foreignObject>
        <path id="prism" class="fg-trace bg-solid" stroke-width="4" d="M 0 50 l -43.3 -75 86.6 0 Z" />
        <!-- d="M 0 -25 l 0 75 43.3 -75 Z"  -->
        <!-- <use href="#prism" style="transform: rotate(120deg);" /> -->
        <!-- <use href="#prism" style="transform: rotate(-120deg);" /> -->

        <foreignObject id="prism-embed" x="-45" y="-25" width="90" height="75">
          <!-- <div id="prism-html" xmlns="http://www.w3.org/1999/xhtml"></div> -->
        </foreignObject>

        <!-- <path class="fg-trace bg-solid" stroke-width="2" d="
        M 0 0
        L -22 -95
        A 85 85 0 0 1 22 -81
        Z
        " style="transform: translateY(28px) rotateZ(70deg);" /> -->
        <!-- <use href="#rainbow-path" /> -->
      </g>
    </g>
    <!-- Begins the chainring -->
    <use href="#chainring-base" />

    <!-- Fills the outward-facing spokes -->
    <g id="outer-teeth">
      <!-- These scoop out the edge of the chainring to make a nice rounded join -->
      <use href="#outer-tooth-negative" />
      <use href="#outer-tooth-negative" style="transform: rotate(15deg);" />
      <use href="#outer-tooth-negative" style="transform: rotate(30deg);" />
      <use href="#outer-tooth-negative" style="transform: rotate(45deg);" />
      <use href="#outer-tooth-negative" style="transform: rotate(60deg);" />
      <use href="#outer-tooth-negative" style="transform: rotate(75deg);" />
      <!-- And these are the actual spokes -->
      <use href="#outer-tooth" />
      <use href="#outer-tooth" style="transform: rotate(15deg);" />
      <use href="#outer-tooth" style="transform: rotate(30deg);" />
      <use href="#outer-tooth" style="transform: rotate(45deg);" />
      <use href="#outer-tooth" style="transform: rotate(60deg);" />
      <use href="#outer-tooth" style="transform: rotate(75deg);" />
    </g>

    <!-- Pentagon (matching original Rust logo) -->
    <g id="inner-teeth-5">
      <use href="#inner-tooth" />
      <use href="#inner-tooth" style="transform: rotate(72deg);" />
      <use href="#inner-tooth" style="transform: rotate(144deg);" />
      <use href="#inner-tooth" style="transform: rotate(-72deg);" />
      <use href="#inner-tooth" style="transform: rotate(-144deg);" />
    </g>

    <!-- Wide Hexagon (allows full use of the x=0 Y-axis) -->
    <g id="inner-teeth-6">
      <use href="#inner-tooth" style="transform: rotate(30deg);" />
      <use href="#inner-tooth" style="transform: rotate(90deg);" />
      <use href="#inner-tooth" style="transform: rotate(150deg);" />
      <use href="#inner-tooth" style="transform: rotate(-30deg);" />
      <use href="#inner-tooth" style="transform: rotate(-90deg);" />
      <use href="#inner-tooth" style="transform: rotate(-150deg);" />
    </g>

    <!-- Marks the center of the image for convenient reference -->
    <!-- <circle id="center" r="1" class="accent-solid" /> -->
  </g>

  <style type="text/css">
    :root {
      --fg-color: #202020;
      --bg-color: #e0e0e0;
      --accent-color-old: #ffd300;

      --aero: #ff4f00;
      --risd: #2454ff;

      --accent-1: var(--risd);
      --accent-2: var(--aero);
    }

    * {
      shape-rendering: crispEdges;
    }

    #logo-square.textual text.acronym {
      font-family: "Roboto Slab";
      font-size: 73px;
      letter-spacing: -7px;
    }

    #logo-square.prismatic #prism-embed {
      clip-path: url("#prism-clip");
    }

    #logo-square.prismatic #rainbow-embed {
      clip-path: url("#rainbow-clip");
    }

    /* Fill the prism itself, for testing */
    #logo-square.prismatic #prism-html {
      background-image: conic-gradient(from 0deg at 45px 25px, red, orange, yellow, green, blue, indigo, red);
      height: 75px;
    }

    /* Fill the refraction */
    #logo-square.prismatic #rainbow-html {
      background-image: conic-gradient(from 50deg at 0px 61px, red, orange 6deg, yellow 12deg, green 18deg, blue 24deg, violet 32deg, red 32deg);
      height: 61px;
    }

    #logo-square:not(.textual) #diagram {
      display: none;
    }

    #logo-square:not(.prismatic) #prismatic {
      display: none;
    }

    #logo-square.sprocket-6 #inner-teeth-5 {
      display: none;
    }

    #logo-square:not(.sprocket-6) #inner-teeth-6 {
      display: none;
    }

    .sepbar {
      stroke-width: 8;
    }

    path {
      stroke: transparent;
      fill: transparent;
      fill-rule: evenodd;
      stroke-linecap: round;
      stroke-linejoin: round;
    }

    .fg-trace {
      stroke: var(--fg-color);
    }

    .fg-solid {
      fill: var(--fg-color);
    }

    .bg-trace {
      stroke: var(--bg-color);
    }

    .bg-solid {
      fill: var(--bg-color);
    }

    .accent1-trace {
      stroke: var(--accent-1);
    }

    .accent1-solid {
      fill: var(--accent-1);
    }

    .accent2-trace {
      stroke: var(--accent-2);
    }

    .accent2-solid {
      fill: var(--accent-2);
    }
  </style>
</svg>
